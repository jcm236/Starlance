name: Build And Test

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - gh-pages
  pull_request: # do not use pull_request_target since it probably won't up to date with PR
    types:
      - opened
      - synchronize

concurrency:
  group: build-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Check & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: microsoft
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Gradle Check
        run: ./gradlew check

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: microsoft
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: LOG-METADATA-1
        run: |
          function output() {
            echo "output:$1=$2"
          }
          output PR_NUMBER "${{ github.event.number }}"
          output HEAD_SHA "${{ github.sha }}"
      - name: Gradle Build
        run: ./gradlew build "-Dmod_artifact_suffix=-pr${{ github.event.number }}-$(git rev-parse --short ${{ github.sha }})"
      - name: Rename build Artifact
        run: mv build/reobfJar/output.jar build/reobfJar/starlance-production-mapped.jar
      - name: Upload Build Artifacts
        id: artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('Starlance Artifacts PR {0}', github.event.number) }}
          path: |
            build/libs
            build/reobfJar/starlance-production-mapped.jar
          overwrite: true
          if-no-files-found: error
      - name: LOG-METADATA-2
        run: |
          function output() {
            echo "output:$1=$2"
          }
          output ARTIFACT_ID "${{ steps.artifact.outputs.artifact-id }}"
          output ARTIFACT_URL "${{ steps.artifact.outputs.artifact-url }}"

  update-javadoc:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.push.outputs.status }}
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout Target Branch
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: microsoft
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Generate Javadoc with Gradle
        run: ./gradlew javadoc

      - name: Checkout Gh Pages Branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          clean: false

      - name: Copy Javadoc
        env:
          REF_NAME: ${{ github.ref_name }}
        run: |
          FOLDER_NAME="${REF_NAME////-}"
          rm -rf ./javadoc/${FOLDER_NAME}
          mkdir -p ./javadoc
          cp -a ./build/docs/javadoc ./javadoc/${FOLDER_NAME}

      - name: Commit and Push Javadoc
        id: push
        env:
          REF_NAME: ${{ github.ref_name }}
        run: |
          function output() {
            echo "output:$1=$2"
          }
          FOLDER_NAME="${REF_NAME////-}"
          output JAVADOC_FOLDER "$FOLDER_NAME"
          git config user.name github-actions
          git config user.email github-actions[bot]@users.noreply.github.com
          git add ./javadoc/${FOLDER_NAME}
          if ! git commit -m "update ${FOLDER_NAME}"; then
            echo "status=noop" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          git push
          echo "status=succeed" >> "$GITHUB_OUTPUT"
